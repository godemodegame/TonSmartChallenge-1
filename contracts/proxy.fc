#include "imports/stdlib.fc";

global slice store::owner;

() load_data() impure inline {
    slice data_storage = get_data()
        .begin_parse();
    store::owner = data_storage~load_msg_addr();
    data_storage.end_parse();
}

slice parse_sender(cell in_msg_full) inline {
    slice cs = in_msg_full.begin_parse();
    cs~load_uint(4); ;; flags
    slice sender = cs~load_msg_addr();
    return sender;
}

() recv_internal(
    int my_balance, 
    int msg_value, 
    cell in_msg_full, 
    slice in_msg_body
) impure {
    slice sender = parse_sender(in_msg_full);

    load_data();

    if ~ equal_slices(sender, store::owner) {
        cell msg_body = begin_cell()
            .store_slice(in_msg_body)
            .end_cell();

        cell msg = begin_cell()
            .store_uint(0x10, 6)
            .store_slice(store::owner)
            .store_grams(0)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
		    .store_slice(sender)
		    .store_ref(msg_body)
            .end_cell();

        send_raw_message(msg, 64);
    }

    return();
}
