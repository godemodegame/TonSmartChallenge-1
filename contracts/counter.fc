#include "imports/stdlib.fc";

global int store::total;

() load_data() impure inline {
    slice ds = get_data()
        .begin_parse();
    store::total = ds~load_uint(64);
    ds.end_parse();
}

() save_data() impure inline {
    set_data(
        begin_cell()
            .store_uint(store::total, 64)
            .end_cell()
    );
}

() recv_internal(
    int my_balance, 
    int msg_value, 
    cell in_msg_full, 
    slice in_msg_body
) impure {
    throw_if(35, in_msg_body.slice_bits() < 32);
    int n = in_msg_body~load_uint(32);
    load_data();
    store::total += n;
    save_data();

    return();
}

int get_total() method_id {
    load_data();
    return store::total;
}
